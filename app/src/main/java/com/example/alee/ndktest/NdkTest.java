package com.example.alee.ndktest;


/**

 1. Go to [project]/app/src/main/java (root of source classpath)
 2. Execute: javah -d [output folder] [fully qualified path to the file wrapping native code]

 * Try to make the output folder on the same level as the build.gradle for your app.

 3. Check the headers that were generated by the javah command
 4. Implement the source in a .c file
 5. Execute ndk-build
 6. This should build a .so file in the libs folder off of the base of the app
 7. If neccessary, add a source set in the gradle file to this folder that maps jniLibs to it.
    Or you can rename this folder to jniLibs
 8. Clean build the app and try it.

 */
public class NdkTest {

    static {
        // load the library (at runtime) implementing the above method
        System.loadLibrary("NdkTest");
    }


    // Basic functions
    public native String getNativeString();
    // the native method without body
    public native String getAnotherNativeString();
   // setting the natives string
    public native void setNativeString(String theString);


    // Access functions for the members of the test class
    public native String getString(TestClass testClass);
    public native void setString(TestClass testClass, String theString);
    public native int getInteger(TestClass testClass);
    public native void setInteger(TestClass testClass, int theInteger);

    // Access functions for the members of the static inner class of the test class
    public native String getString2(TestClass testClass);
    public native void setString2(TestClass testClass, String theString);
    public native int getInteger2(TestClass testClass);
    public native void setInteger2(TestClass testClass, int theInteger);


    // Accessing system objects


    // Reading and writing from the database






}




